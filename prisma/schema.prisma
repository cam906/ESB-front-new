generator nextAdmin {
  provider = "next-admin-generator-prisma"
}

generator client {
  provider      = "prisma-client-js"
  output        = "../app/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Competitor {
  id        Int       @id(map: "idx_24588_primary") @default(autoincrement())
  SportId   Int       @map("sportid")
  name      String    @db.VarChar(128)
  logo      String?   @db.VarChar(128)
  createdAt DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt DateTime? @map("deletedat") @db.Timestamptz(6)

  @@unique([SportId, name], map: "idx_24588_competitor_sportid_name_uindex")
  @@map("competitor")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model CreditPurchase {
  id                       Int       @id(map: "idx_24593_primary") @default(autoincrement())
  UserId                   Int       @map("userid")
  oldSystemUserId          String?   @map("oldsystemuserid") @db.VarChar(64)
  PackageId                Int       @map("packageid")
  callbackKey              String    @map("callbackkey") @db.VarChar(256)
  priceInCents             Int?      @map("priceincents")
  credits                  Int
  externalPaymentProcessor String?   @map("externalpaymentprocessor") @db.VarChar(64)
  externalChargeId         String?   @map("externalchargeid") @db.VarChar(64)
  startedAt                DateTime  @map("startedat") @db.Timestamptz(6)
  appliedAt                DateTime? @map("appliedat") @db.Timestamptz(6)
  createdAt                DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt                DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt                DateTime? @map("deletedat") @db.Timestamptz(6)

  @@map("creditpurchase")
}

model DailyMetric {
  id        Int                @id(map: "idx_24598_primary") @default(autoincrement())
  metric    dailymetric_metric
  date      DateTime           @db.Date
  value     Decimal?           @db.Decimal(10, 2)
  textValue String?            @map("textvalue") @db.VarChar(64)
  meta      Json?              @db.Json
  createdAt DateTime           @default(now()) @map("createdat") @db.Timestamptz(6)
  updatedAt DateTime           @map("updatedat") @db.Timestamptz(6)

  @@unique([metric, date], map: "idx_24598_dailymetric_metric_date_uindex")
  @@map("dailymetric")
}

model MailQueue {
  id                  BigInt    @id(map: "idx_24606_primary") @default(autoincrement())
  mailStatus          Int       @map("mailstatus")
  from                String    @db.VarChar(255)
  to                  String    @db.VarChar(255)
  cc                  String?   @db.VarChar(255)
  bcc                 String?   @db.VarChar(255)
  subject             String    @db.VarChar(255)
  template            String
  templateVars        String    @map("templatevars")
  attachmentPath      String?   @map("attachmentpath") @db.VarChar(255)
  attachmentFileName  String?   @map("attachmentfilename") @db.VarChar(255)
  attachmentMediaType String?   @map("attachmentmediatype") @db.VarChar(255)
  errorMessage        String?   @map("errormessage") @db.VarChar(255)
  createdAt           DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt           DateTime? @map("updatedat") @db.Timestamptz(6)
  deletedAt           DateTime? @map("deletedat") @db.Timestamptz(6)

  @@map("mailqueue")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model OldDbPick {
  awayTeamId     Int?    @map("awayteamid")
  homeTeamId     Int?    @map("hometeamid")
  sportId        Int?    @map("sportid")
  slug           String? @db.VarChar(128)
  pickResultText String? @map("pickresulttext") @db.VarChar(16)
  pickResult     Int?    @default(0) @map("pickresult")

  @@map("old_db_picks")
  @@ignore
}

model Order {
  id            Int       @id(map: "idx_24613_primary") @default(autoincrement())
  UserId        Int       @map("userid")
  PackageId     Int       @map("packageid")
  paypalOrderId String    @unique(map: "idx_24613_order_paypalorderid_uindex") @map("paypalorderid") @db.VarChar(64)
  amountInCents Int       @map("amountincents")
  currency      String    @db.VarChar(8)
  status        String    @db.VarChar(16)
  rawResponse   String?   @map("rawresponse")
  createdAt     DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt     DateTime? @map("deletedat") @db.Timestamptz(6)

  @@map("order")
}

model packages {
  id             Int       @id(map: "idx_24620_primary") @default(autoincrement())
  title          String    @db.VarChar(32)
  description    String    @db.VarChar(512)
  credits        Int
  priceInCents   Int       @map("priceincents")
  externalPlanId String?   @map("externalplanid") @db.VarChar(32)
  createdAt      DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt      DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt      DateTime? @map("deletedat") @db.Timestamptz(6)

}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Pick {
  id               Int       @id(map: "idx_24627_primary") @default(autoincrement())
  SportId          Int       @map("sportid")
  AwayCompetitorId Int       @map("awaycompetitorid")
  HomeCompetitorId Int       @map("homecompetitorid")
  status           Int
  title            String    @db.VarChar(128)
  slug             String?   @db.VarChar(128)
  matchTime        DateTime  @map("matchtime") @db.Timestamptz(6)
  analysis         String    @db.VarChar(4096)
  summary          String    @db.VarChar(256)
  isFeatured       Int       @default(0) @map("isfeatured") @db.SmallInt
  cntUnlocked      Int       @default(0) @map("cntunlocked")
  externalDataObj  String?   @map("externaldataobj") @db.VarChar(4096)
  createdAt        DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt        DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt        DateTime? @map("deletedat") @db.Timestamptz(6)

  @@map("pick")
}

model PickNews {
  id        Int       @id(map: "idx_24636_primary") @default(autoincrement())
  pickId    Int       @map("pickid")
  news      String    @db.VarChar(4096)
  createdAt DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt DateTime? @map("deletedat") @db.Timestamptz(6)

  @@map("picknews")
}

model Sport {
  id         Int       @id(map: "idx_24643_primary") @default(autoincrement())
  shortTitle String    @unique(map: "idx_24643_sport_shorttitle_uindex") @map("shorttitle") @db.VarChar(6)
  title      String    @unique(map: "idx_24643_sport_title_uindex") @db.VarChar(32)
  createdAt  DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt  DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt  DateTime? @map("deletedat") @db.Timestamptz(6)

  @@map("sport")
}

model UnlockedPick {
  id              Int       @id(map: "idx_24648_primary") @default(autoincrement())
  UserId          Int       @map("userid")
  oldSystemUserId String?   @map("oldsystemuserid") @db.VarChar(64)
  PickId          Int       @map("pickid")
  createdAt       DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt       DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt       DateTime? @map("deletedat") @db.Timestamptz(6)

  @@map("unlockedpick")
}

model User {
  id                Int       @id(map: "idx_24653_primary") @default(autoincrement())
  email             String    @unique(map: "idx_24653_users_email_uindex") @db.VarChar(128)
  name              String?   @db.VarChar(128)
  credits           Int       @default(0)
  cognitoUserId     String?   @unique(map: "idx_24653_user_cognitouserid_uindex") @map("cognitouserid") @db.VarChar(64)
  oldSystemUserId   String?   @unique(map: "idx_24653_user_oldsystemuserid_uindex") @map("oldsystemuserid") @db.VarChar(64)
  roles             String?   @db.VarChar(64)
  myReferralCode    String?   @map("myreferralcode") @db.VarChar(16)
  otherReferralCode String?   @map("otherreferralcode") @db.VarChar(16)
  createdAt         DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt         DateTime  @map("updatedat") @db.Timestamptz(6)
  deletedAt         DateTime? @map("deletedat") @db.Timestamptz(6)
  password          String    @db.VarChar(255)

  @@map("user")
}

model UserRole {
  id   Int    @id(map: "idx_24661_primary") @default(autoincrement())
  role String @unique(map: "idx_24661_userrole_role_uindex") @db.VarChar(16)

  @@map("userrole")
}

enum dailymetric_metric {
  WIN_RATE
  AVG_ROI
  WIN_STREAK
  MEMBERS
}
